---
description: 
globs: 
alwaysApply: false
---
# Агентное кодирование в Shard Legends: Clan Wars

## Основные принципы

### 1. Человек проектирует, агент кодирует

Разработка в Shard Legends: Clan Wars следует четкому разделению ответственности:

| Этап | Человек | AI агент | Комментарий |
|:-----|:-------:|:--------:|:------------|
| Требования | ★★★ Высокий | ★☆☆ Низкий | Человек понимает бизнес-контекст и потребности |
| Проектирование | ★★☆ Средний | ★★☆ Средний | Совместная работа над архитектурой |
| Реализация | ★☆☆ Низкий | ★★★ Высокий | AI реализует потоки согласно проекту |
| Оптимизация | ★★☆ Средний | ★★☆ Средний | Человек оценивает результаты, AI оптимизирует |
| Надежность | ★☆☆ Низкий | ★★★ Высокий | AI пишет тесты и обрабатывает граничные случаи |

### 2. Последовательность разработки

#### 2.1. Требования (Human-driven)
- Четко формулируйте проблему с точки зрения пользователя
- Оценивайте применимость AI-систем:
  - ✅ Подходит: Рутинные задачи (обработка форм, ответы на email)  
  - ✅ Подходит: Творческие задачи с четкими входными данными (генерация SQL, создание презентаций)
  - ❌ Не подходит: Неоднозначные проблемы со сложным принятием решений

#### 2.2. Проектирование потоков (Human + AI)
- Начинайте с высокоуровневого описания потока
- Используйте паттерны проектирования:
  - **Agent**: Для динамических решений на основе контекста
  - **Workflow**: Для последовательной обработки задач
  - **RAG**: Для интеграции поиска данных с генерацией
  - **MapReduce**: Для обработки больших объемов данных
- Описывайте потоки через Mermaid диаграммы в конфигурациях

### 3. Гарантированное выполнение

Для обеспечения консистентности и надежности:

1. **Транзакционность**: Каждый поток должен быть атомарным
2. **Идемпотентность**: Повторный запуск не должен создавать дубликаты
3. **Персистентность**: Критичные данные сохраняются в БД
4. **Мониторинг**: Все действия логируются для отслеживания
5. **Graceful degradation**: Fallback-механизмы для обработки ошибок

### 4. Итеративная разработка

Ожидайте множество итераций:
- Начинайте с MVP (минимально жизнеспособного продукта)
- Тестируйте на реальных данных
- Собирайте обратную связь
- Итерируйте шаги 2-7 до достижения целей

### Общие принципы
1. **Всегда начинайте с простого решения**
2. **Часто запрашивайте обратную связь у человека**
3. **Не усложняйте без необходимости**
4. **Документируйте высокоуровневые решения, а не детали кода**
