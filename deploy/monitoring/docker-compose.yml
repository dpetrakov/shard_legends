services:
  # Loki - хранилище логов
  loki:
    image: grafana/loki:2.9.0
    container_name: slcw-loki
    ports:
      - "127.0.0.1:15100:3100"
    volumes:
      - loki-data:/loki
      - ./loki-config.yml:/etc/loki/local-config.yaml:ro
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - slcw-monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://127.0.0.1:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Promtail - сборщик логов
  promtail:
    image: grafana/promtail:2.9.0
    container_name: slcw-promtail
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail-config.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - slcw-monitoring
    restart: unless-stopped
    depends_on:
      loki:
        condition: service_healthy

  # Prometheus - метрики
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: slcw-prometheus
    ports:
      - "127.0.0.1:15090:9090"
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alerts.yml:/etc/prometheus/alerts.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - slcw-monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://127.0.0.1:9090/-/healthy || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana - визуализация
  grafana:
    image: grafana/grafana:10.0.0
    container_name: slcw-grafana
    ports:
      - "127.0.0.1:15000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_USERS_DEFAULT_THEME=dark
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - slcw-monitoring
    restart: unless-stopped
    depends_on:
      loki:
        condition: service_healthy
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://127.0.0.1:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # cAdvisor - метрики контейнеров
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: slcw-cadvisor
    ports:
      - "127.0.0.1:15081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - slcw-monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://127.0.0.1:8080/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  slcw-monitoring:
    name: slcw-monitoring
    driver: bridge

volumes:
  loki-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local