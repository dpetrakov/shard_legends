# -----------------------------------------------------------
#  SLCW  —  prod / stage / dev
#    • /api/*  → микросервисы через map-based routing
#    • /       → фронтенд-SPA
# -----------------------------------------------------------

############  HTTP → HTTPS  ##################################
server {
    listen 80;
    server_name slcw.dimlight.online stage.slcw.dimlight.online dev.slcw.dimlight.online dev-dim.slcw.dimlight.online dev-forly.slcw.dimlight.online;
    return 301 https://$host$request_uri;
}

############  Микросервисы - динамический роутинг  ##########
# Порты микросервисов:
# DEV: 9000-9099
# STAGE: 7000-7099  
# PROD: 5000-5099

# DEV микросервисы
map $uri $dev_service_backend {
    ~^/api/ping(.*)$     127.0.0.1:9001/ping$1;
    ~^/api/auth(.*)$     127.0.0.1:9002.auth$1;
}

# DEV микросервисы
map $uri $dev_dim_service_backend {
    ~^/api/ping(.*)$     127.0.0.1:10081/ping$1;
    ~^/api/auth(.*)$     127.0.0.1:10082/auth$1;
}

# STAGE микросервисы
map $uri $stage_service_backend {
    ~^/api/ping(.*)$     127.0.0.1:7001/ping$1;
    ~^/api/auth(.*)$     127.0.0.1:7002/auth$1;
}

# PROD микросервисы
map $uri $prod_service_backend {
    ~^/api/ping(.*)$     127.0.0.1:5001/ping$1;
    ~^/api/auth(.*)$     127.0.0.1:5002/auth$1;
}

# Выбор backend на основе хоста
map $host $api_backend {
    default                         $prod_service_backend;
    stage.slcw.dimlight.online      $stage_service_backend;
    dev.slcw.dimlight.online        $dev_service_backend;
    dev-dim.slcw.dimlight.online    $dev_dim_service_backend;
    dev-forly.slcw.dimlight.online  $dev_service_backend;
}

# Frontend-контейнеры
map $host $front_upstream {
    default                         127.0.0.1:8090;   # prod-front
    stage.slcw.dimlight.online      127.0.0.1:8091;   # stage-front
    dev.slcw.dimlight.online        127.0.0.1:8092;   # dev-front
    dev-dim.slcw.dimlight.online    127.0.0.1:8092;   # shared dev-front
    dev-forly.slcw.dimlight.online  127.0.0.1:8092;   # shared dev-front
}

############  UNIFIED HTTPS server block  ###############
# Объединенный блок для prod, stage, dev и dev-dim
server {
    listen 443 ssl http2;
    server_name slcw.dimlight.online stage.slcw.dimlight.online dev.slcw.dimlight.online dev-dim.slcw.dimlight.online;

    ssl_certificate     /etc/letsencrypt/live/slcw.dimlight.online/fullchain.pem;  # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/slcw.dimlight.online/privkey.pem;    # managed by Certbot

    # --- TLS / security ---
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 1h;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         EECDH+AESGCM:EECDH+CHACHA20;
    ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=63072000" always;

    # --- общие proxy-настройки ---
    client_max_body_size     50m;
    proxy_read_timeout       600s;
    proxy_request_buffering  off;
    proxy_buffering          off;

    # ----------  API микросервисы  --------------------------
    location /api/ {
        proxy_pass http://$api_backend;
        include     proxy_params;
        
        # Важно для правильной работы с путями
        proxy_redirect off;
        
        # Дополнительные заголовки для микросервисов
        proxy_set_header X-Service-Name $uri;
        proxy_set_header X-Environment $host;
    }

    # ----------  FRONTEND  -----------------------------------
    location / {
        proxy_pass http://$front_upstream;
        include     proxy_params;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Next.js static files
    location /_next/ {
        proxy_pass http://$front_upstream;
        include     proxy_params;
    }
}

############  DEV-FORLY HTTPS (Firebase Studio)  ##############
# Отдельный блок для dev-forly с Firebase Studio
server {
    listen 443 ssl http2;
    server_name dev-forly.slcw.dimlight.online;

    ssl_certificate     /etc/letsencrypt/live/slcw.dimlight.online/fullchain.pem;  # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/slcw.dimlight.online/privkey.pem;    # managed by Certbot

    # --- TLS / security ---
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 1h;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         EECDH+AESGCM:EECDH+CHACHA20;
    ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=63072000" always;

    # --- общие proxy-настройки ---
    client_max_body_size     50m;
    proxy_read_timeout       600s;
    proxy_request_buffering  off;
    proxy_buffering          off;

    # ----------  API микросервисы  --------------------------
    location /api/ {
        proxy_pass http://$api_backend;
        include     proxy_params;
        
        # Важно для правильной работы с путями
        proxy_redirect off;
        
        # Дополнительные заголовки для микросервисов
        proxy_set_header X-Service-Name $uri;
        proxy_set_header X-Environment $host;
    }

    # ----------  FRONTEND (Firebase Studio)  -----------------
    location / {
        proxy_pass https://9000-firebase-studio-1750233364664.cluster-73qgvk7hjjadkrjeyexca5ivva.cloudworkstations.dev;
        
        # Proxy headers
        proxy_set_header Host 9000-firebase-studio-1750233364664.cluster-73qgvk7hjjadkrjeyexca5ivva.cloudworkstations.dev;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header Origin https://9000-firebase-studio-1750233364664.cluster-73qgvk7hjjadkrjeyexca5ivva.cloudworkstations.dev;
        proxy_set_header Referer https://9000-firebase-studio-1750233364664.cluster-73qgvk7hjjadkrjeyexca5ivva.cloudworkstations.dev/;
        proxy_redirect off;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
        
        # SSL settings
        proxy_ssl_verify off;
        
        # Allow Firebase Studio console
        proxy_hide_header X-Frame-Options;
        proxy_hide_header Content-Security-Policy;
        add_header X-Frame-Options "SAMEORIGIN" always;
    }
}