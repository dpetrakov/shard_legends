openapi: 3.0.3
info:
  title: Inventory Service API
  description: |
    API для управления инвентарем пользователей в игре Shard Legends: Clan Wars.
    
    Сервис обеспечивает:
    - Просмотр инвентаря пользователей
    - Резервирование предметов для производства
    - Добавление предметов (награды, покупки)
    - Административные операции
    
    Публичные эндпоинты требуют JWT токен для аутентификации.
    Внутренние эндпоинты изолированы сетью и не требуют аутентификации.
    
    ## JWT Аутентификация
    
    ### Процесс валидации токена:
    
    1. **Проверка формата токена** - Bearer prefix в Authorization header
    2. **Валидация RS256 подписи** - используя публичный ключ от Auth Service
    3. **Проверка времени действия** - проверка exp claim
    4. **Проверка отзыва в Redis** - проверка что токен не отозван
    5. **Извлечение user_id** - из sub claim для авторизации
    
    ### Заголовок запроса:
    ```
    Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...
    ```
    
    ### Возможные ошибки аутентификации:
    - `missing_token` - отсутствует Authorization header
    - `invalid_token_format` - неправильный формат Bearer токена  
    - `invalid_token_signature` - неверная RS256 подпись
    - `token_revoked` - токен отозван в Redis
    - `missing_user_id` - отсутствует user_id в токене
  version: 1.0.0
  contact:
    name: Shard Legends Team

servers:
  - url: http://localhost:9000/api/inventory
    description: Публичный API (API Gateway)
  - url: http://localhost:22003/api/inventory
    description: Внутренний API (прямое обращение к inventory-service)

security:
  - bearerAuth: []

tags:
  - name: Public
    description: Публичные эндпоинты для фронтенда (порт 8080, требуют пользовательский JWT)
  - name: Internal
    description: Внутренние эндпоинты для других сервисов (порт 8090, изолированы сетью)
  - name: Admin
    description: Административные эндпоинты (порт 8090, изолированы сетью)

paths:
  /inventory:
    get:
      tags:
        - Public
      summary: Получить инвентарь пользователя
      description: |
        Возвращает текущее состояние инвентаря пользователя.
        Остатки рассчитываются динамически на основе дневных остатков и операций.
      operationId: getUserInventory
      parameters:
        - name: section
          in: query
          description: Раздел инвентаря
          required: false
          schema:
            type: string
            enum: [main, factory, trade]
            default: main
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /inventory/reserve:
    post:
      tags:
        - Internal
      summary: Зарезервировать предметы
      description: |
        Резервирует предметы для производственного задания.
        Перемещает предметы из основного в фабричный инвентарь.
        
        **Доступен только на внутреннем порту (8090).**
        **Изолирован сетью, аутентификация не требуется.**
      operationId: reserveItems
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReserveItemsRequest'
      responses:
        '200':
          description: Предметы успешно зарезервированы
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '400':
          description: Недостаточно предметов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientItemsError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /inventory/return-reserve:
    post:
      tags:
        - Internal
      summary: Вернуть зарезервированные предметы
      description: |
        Возвращает зарезервированные предметы из фабричного в основной инвентарь.
        Используется при отмене производственного задания.
        
        **Доступен только на внутреннем порту (8090).**
        **Изолирован сетью, аутентификация не требуется.**
      operationId: returnReservedItems
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnReserveRequest'
      responses:
        '200':
          description: Предметы успешно возвращены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Операция резервирования не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalError'

  /inventory/consume-reserve:
    post:
      tags:
        - Internal
      summary: Потребить зарезервированные предметы
      description: |
        Уничтожает зарезервированные предметы при успешном завершении производства.
        Предметы списываются из фабричного инвентаря без возврата.
        
        **Доступен только на внутреннем порту (8090).**
        **Изолирован сетью, аутентификация не требуется.**
      operationId: consumeReservedItems
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsumeReserveRequest'
      responses:
        '200':
          description: Предметы успешно потреблены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Операция резервирования не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalError'

  /inventory/add-items:
    post:
      tags:
        - Internal
      summary: Добавить предметы в инвентарь
      description: |
        Добавляет предметы в инвентарь пользователя.
        Используется для начисления наград, покупок, результатов производства.
        
        **Доступен только на внутреннем порту (8090).**
        **Изолирован сетью, аутентификация не требуется.**
      operationId: addItems
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddItemsRequest'
      responses:
        '200':
          description: Предметы успешно добавлены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /health:
    get:
      tags:
        - Internal
      summary: Проверка состояния сервиса
      description: |
        Возвращает состояние сервиса и готовность к обработке запросов.
        
        **Доступен только на внутреннем порту (8090).**
        **Не требует аутентификации.**
      operationId: healthCheck
      security: []
      responses:
        '200':
          description: Сервис здоров
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - timestamp
                properties:
                  status:
                    type: string
                    enum: [healthy]
                  timestamp:
                    type: string
                    format: date-time
                  database:
                    type: string
                    enum: [connected, error]
                  redis:
                    type: string
                    enum: [connected, error]
        '503':
          description: Сервис недоступен
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - timestamp
                properties:
                  status:
                    type: string
                    enum: [unhealthy]
                  timestamp:
                    type: string
                    format: date-time
                  errors:
                    type: array
                    items:
                      type: string

  /metrics:
    get:
      tags:
        - Internal
      summary: Метрики Prometheus
      description: |
        Возвращает метрики в формате Prometheus для мониторинга.
        
        **Доступен только на внутреннем порту (8090).**
        **Не требует аутентификации.**
      operationId: getMetrics
      security: []
      responses:
        '200':
          description: Метрики в формате Prometheus
          content:
            text/plain:
              schema:
                type: string
                example: |
                  # HELP inventory_service_requests_total Total number of requests
                  # TYPE inventory_service_requests_total counter
                  inventory_service_requests_total{method="GET",endpoint="/inventory"} 42
                  
                  # HELP inventory_service_request_duration_seconds Request duration in seconds
                  # TYPE inventory_service_request_duration_seconds histogram
                  inventory_service_request_duration_seconds_bucket{le="0.005"} 10

  /items/details:
    post:
      tags:
        - Public
      summary: Получить локализованную информацию о предметах
      description: |
        Возвращает локализованные названия, описания и изображения для списка предметов.
        Поддерживает fallback на дефолтный язык при отсутствии перевода.
        Использует кеширование для оптимизации производительности.
      operationId: getItemsDetails
      parameters:
        - name: lang
          in: query
          description: Код языка (ru, en)
          required: false
          schema:
            type: string
            default: ru
            enum: [ru, en]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemDetailsRequest'
      responses:
        '200':
          description: Успешный ответ с локализованной информацией
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDetailsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /admin/adjust:
    post:
      tags:
        - Admin
      summary: Административная корректировка инвентаря
      description: |
        Позволяет администраторам корректировать инвентарь пользователей.
        Доступ контролируется изоляцией сети.
        
        **Доступен только на внутреннем порту (8090).**
        **Изолирован сетью, аутентификация не требуется.**
      operationId: adjustInventory
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustInventoryRequest'
      responses:
        '200':
          description: Инвентарь успешно скорректирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdjustInventoryResponse'
        '400':
          description: Недостаточно предметов для списания
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientItemsError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Пользовательский JWT токен с RS256 подписью от Auth Service.
        Используется для публичных эндпоинтов (порт 8080).
        
        Процесс валидации:
        1. Проверка Bearer формата
        2. Валидация RS256 подписи (публичный ключ от auth-service:8090/public-key.pem)
        3. Проверка времени действия (exp claim)  
        4. Проверка отзыва в Redis (EXISTS revoked:{jti})
        5. Извлечение user_id из sub claim
        
        Формат: Authorization: Bearer <jwt_token>
    
    serviceAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        УСТАРЕЛО: Service JWT токен больше не используется для внутренних эндпоинтов.
        
        Внутренние эндпоинты (порт 8090) изолированы сетью и не требуют аутентификации.
        Схема оставлена для обратной совместимости спецификации.

  schemas:
    # Базовые типы
    ItemQuantity:
      type: object
      required:
        - item_id
        - quantity
      properties:
        item_id:
          type: string
          format: uuid
          description: UUID предмета
        collection:
          type: string
          description: Код коллекции (опционально, если не указано - стандартная)
          example: winter
        quality_level:
          type: string
          description: Код уровня качества (опционально, если не указано - стандартный)
          example: wooden
        quantity:
          type: integer
          minimum: 1
          description: Количество предметов

    InventoryItem:
      type: object
      required:
        - item_id
        - item_class
        - item_type
        - quantity
      properties:
        item_id:
          type: string
          format: uuid
          description: UUID предмета
        item_class:
          type: string
          description: Код класса предмета
          example: tools
        item_type:
          type: string
          description: Код типа предмета
          example: axe
        collection:
          type: string
          description: Код коллекции (отсутствует для стандартной)
          example: winter
        quality_level:
          type: string
          description: Код уровня качества (отсутствует для стандартного)
          example: wooden
        quantity:
          type: integer
          minimum: 0
          description: Текущее количество

    # Ответы
    InventoryResponse:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/InventoryItem'

    OperationResponse:
      type: object
      required:
        - success
        - operation_ids
      properties:
        success:
          type: boolean
        operation_ids:
          type: array
          items:
            type: string
            format: uuid
          description: UUID созданных операций

    AdjustInventoryResponse:
      type: object
      required:
        - success
        - operation_ids
        - final_balances
      properties:
        success:
          type: boolean
        operation_ids:
          type: array
          items:
            type: string
            format: uuid
        final_balances:
          type: array
          items:
            $ref: '#/components/schemas/InventoryItem'
          description: Итоговые остатки после корректировки

    # Запросы
    ReserveItemsRequest:
      type: object
      required:
        - user_id
        - operation_id
        - items
      properties:
        user_id:
          type: string
          format: uuid
          description: UUID пользователя
        operation_id:
          type: string
          format: uuid
          description: UUID операции резервирования (для связи с производственным заданием)
        items:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ItemQuantity'

    ReturnReserveRequest:
      type: object
      required:
        - user_id
        - operation_id
      properties:
        user_id:
          type: string
          format: uuid
          description: UUID пользователя
        operation_id:
          type: string
          format: uuid
          description: UUID операции резервирования для возврата

    ConsumeReserveRequest:
      type: object
      required:
        - user_id
        - operation_id
      properties:
        user_id:
          type: string
          format: uuid
          description: UUID пользователя
        operation_id:
          type: string
          format: uuid
          description: UUID операции резервирования для потребления

    AddItemsRequest:
      type: object
      required:
        - user_id
        - section
        - operation_type
        - operation_id
        - items
      properties:
        user_id:
          type: string
          format: uuid
          description: UUID пользователя
        section:
          type: string
          enum: [main, factory, trade]
          description: Раздел инвентаря
          default: main
        operation_type:
          type: string
          description: Код типа операции из классификатора
          example: chest_reward
        operation_id:
          type: string
          format: uuid
          description: UUID внешней операции (для связи с источником)
        items:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ItemQuantity'
        comment:
          type: string
          description: Комментарий к операции
          maxLength: 500

    AdjustInventoryRequest:
      type: object
      required:
        - user_id
        - section
        - items
        - reason
      properties:
        user_id:
          type: string
          format: uuid
          description: UUID пользователя
        section:
          type: string
          enum: [main, factory, trade]
          description: Раздел инвентаря
          default: main
        items:
          type: array
          minItems: 1
          items:
            type: object
            required:
              - item_id
              - quantity_change
            properties:
              item_id:
                type: string
                format: uuid
              collection:
                type: string
                description: Код коллекции
              quality_level:
                type: string
                description: Код уровня качества
              quantity_change:
                type: integer
                description: Изменение количества (может быть отрицательным)
        reason:
          type: string
          description: Причина административной корректировки
          minLength: 10
          maxLength: 500

    ItemDetailsRequest:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          minItems: 1
          maxItems: 100
          description: Список предметов для получения информации (максимум 100)
          items:
            type: object
            required:
              - item_id
            properties:
              item_id:
                type: string
                format: uuid
                description: UUID предмета
              collection:
                type: string
                description: Код коллекции (опционально)
                example: winter_2025
              quality_level:
                type: string
                description: Код уровня качества (опционально)
                example: stone

    ItemDetailsResponse:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - item_id
              - code
              - name
              - description
              - image_url
            properties:
              item_id:
                type: string
                format: uuid
                description: UUID предмета
              code:
                type: string
                description: Код типа предмета
                example: stone
              name:
                type: string
                description: Локализованное название предмета
                example: Камень
              description:
                type: string
                description: Локализованное описание предмета
                example: Базовый строительный материал
              image_url:
                type: string
                format: uri
                description: URL изображения предмета
                example: https://cdn.example.com/items/stone_winter_2025_stone.png
              collection:
                type: string
                description: Код коллекции (если указан в запросе)
                example: winter_2025
              quality_level:
                type: string
                description: Код уровня качества (если указан в запросе)
                example: stone

    # Ошибки
    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Код ошибки
        message:
          type: string
          description: Описание ошибки
        details:
          type: object
          description: Дополнительная информация об ошибке

    InsufficientItemsError:
      type: object
      required:
        - error
        - message
        - missing_items
      properties:
        error:
          type: string
          enum: [insufficient_items]
        message:
          type: string
        missing_items:
          type: array
          items:
            type: object
            required:
              - item_id
              - required
              - available
            properties:
              item_id:
                type: string
                format: uuid
              collection:
                type: string
              quality_level:
                type: string
              required:
                type: integer
                description: Требуемое количество
              available:
                type: integer
                description: Доступное количество

  responses:
    Unauthorized:
      description: Отсутствует или недействительный JWT токен
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            missing_token:
              summary: Отсутствует токен
              value:
                error: missing_token
                message: Missing Authorization header
            invalid_token_format:
              summary: Неправильный формат
              value:
                error: invalid_token_format  
                message: Invalid Bearer token format
            invalid_token_signature:
              summary: Неверная подпись
              value:
                error: invalid_token_signature
                message: Invalid JWT signature
            token_revoked:
              summary: Токен отозван
              value:
                error: token_revoked
                message: Token has been revoked
            missing_user_id:
              summary: Отсутствует user_id
              value:
                error: missing_user_id
                message: Missing user_id in token claims

    Forbidden:
      description: Недостаточно прав доступа
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: forbidden
            message: Insufficient permissions

    NotFound:
      description: Ресурс не найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: not_found
            message: Resource not found

    BadRequest:
      description: Некорректный запрос
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: bad_request
            message: Invalid request parameters

    InternalError:
      description: Внутренняя ошибка сервера
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: internal_error
            message: An unexpected error occurred
